package com.casestudy.admin.signup.controller;

import java.util.List;
import java.util.Optional;
import java.util.UUID;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.DuplicateKeyException;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.casestudy.admin.signup.model.admin;
import com.casestudy.admin.signup.repository.adminRepository;
import com.casestudy.customer.signUpLogin.models.UserDetails;
import com.casestudy.customer.signUpLogin.services.SequenceGeneratorService;


@RestController
@RequestMapping("/admin")
public class signupController {


	@Autowired
    private  adminRepository  repository;
	
	@Autowired
	private SequenceGeneratorService service;
	

	@PostMapping("/adduser")
	public String saveUserDetails(@RequestBody admin admin) throws DuplicateKeyException
	{
		try {
		admin.setId(UUID.randomUUID());
		repository.save(admin);
		
		return "userDetails added successfully with id "+user.getId();
		}
		catch(DuplicateKeyException e)
		{
			return "User Registration Failed-Email Already Exists";
		}
	}
	@GetMapping("/findAllUsers")
	public List<UserDetails> getUserDetails(){
		return repository.findAll();
	}
	
	@GetMapping("/findAllUsers/{id}")
	public Optional<UserDetails> getUser(@PathVariable int id){
		return repository.findById(id);
	}
	
	@GetMapping("/findByEmailId/{emailId}")
	public List<UserDetails> getUserByemail(@PathVariable String emailId)
	{
		return repository.findByEmailId(emailId);
	}
	
	@DeleteMapping("/delete/{id}")
	public String deleteBook(@PathVariable int id)
	{
		repository.deleteById(id);
		return "User deleted with id:"+id;
	}
	
}
